{"mappings":"qhBAGA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SAoBvC,SAASC,EAAcC,EAAUC,GAEf,IAAIC,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,GACFF,EAAQ,YACRM,QAAQC,IAAI,uBAAqBV,QAAiBC,OAClDU,EAAAjB,GAASkB,OAAOC,QAAQ,qBAAqBb,QAAeC,SAE5DG,EAAO,SACPK,QAAQC,IAAI,sBAAoBV,QAAiBC,OACjDU,EAAAjB,GAASkB,OAAOE,QACd,sBAAoBd,QAAeC,O,GAGtCA,EAAM,G,CApCbL,EAAQmB,iBAAiB,UAEzB,SAAkBC,GAChBA,EAAIC,iBACJ,IAAIC,EAAaC,OAAOvB,EAAQK,MAAMmB,OAClCC,EAAYF,OAAOvB,EAAQ0B,KAAKF,OAChCG,EAAiBJ,OAAOvB,EAAQ4B,OAAOJ,OAG3C,IAAK,IAAIK,EAAI,EAAGA,GAAKF,EAAgBE,GAAK,EAAG,CAK3C1B,EAAc0B,EAFKP,EAAaO,EAAIJ,E","sources":["src/js/03-promises.js"],"sourcesContent":["// Дополни код функции createPromise так, чтобы она возвращала один промис, который выполянется или отклоняется через delay времени. Значением промиса должен быть объект, в котором будут свойства position и delay со значениями одноименных параметров. Используй начальный код функции для выбора того, что нужно сделать с промисом - выполнить или отклонить.\n// Дополни код функции createPromise так, чтобы она возвращала один промис, который выполянется или отклоняется через delay времени. Значением промиса должен быть объект, в котором будут свойства position и delay со значениями одноименных параметров. Используй начальный код функции для выбора того, что нужно сделать с промисом - выполнить или отклонить.\n\nimport Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\nformRef.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  let firstDelay = Number(formRef.delay.value);\n  let stepDelay = Number(formRef.step.value);\n  let positionAmount = Number(formRef.amount.value);\n  // console.log(firstDelay, stepDelay, positionAmount);\n\n  for (let i = 1; i <= positionAmount; i += 1) {\n    // console.log(position, stepDelay);\n    // stepDelay += stepDelay;\n    const totaldelay = firstDelay + i * stepDelay;\n    // console.log(positionAmount, stepDelay);\n    createPromise(i, totaldelay);\n    // createPromise(i, stepDelay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  // console.log(positionAmount, stepDelay);\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve('Succsess');\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject('Error');\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      }\n    }, delay);\n  });\n}\n\n// const fetchUserFromServer = username => {\n//   return new Promise((resolve, reject) => {\n//     console.log(`Fetching data for ${username}`);\n\n//     setTimeout(() => {\n//       // Change value of isSuccess variable to simulate request status\n//       const shouldResolve = Math.random() > 0.3;\n\n//       if (shouldResolve) {\n//         // Fulfill\n//       } else {\n//         // Reject\n//       }\n//     }, 2000);\n//   });\n// };\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","console","log","$parcel$interopDefault","Notify","success","failure","addEventListener","evt","preventDefault","firstDelay","Number","value","stepDelay","step","positionAmount","amount","i"],"version":3,"file":"03-promises.dad99a0c.js.map"}